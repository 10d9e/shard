name: release

# This workflow is triggered when a new tag is pushed to the repository.
# To create a new release, follow these steps:
# 1. Make sure all changes are committed and pushed to the main branch.
# 2. Tag the commit you want to release with a version number, e.g., `git tag v1.0.0`.
# 3. Push the tag to the remote repository: `git push origin v1.0.0`.
# 4. The workflow will be triggered automatically when the tag is pushed.
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    # Extract the version number from the tag
    - name: Extract Version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    # Update Cargo.toml with the extracted version
    - name: Update Cargo.toml Version
      run: |
        sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" Cargo.toml

    # Build the client binary.
    - name: Build Client
      run: cargo build --release --bin client

    # Build the server binary.
    - name: Build Server
      run: cargo build --release --bin server

    - name: Run Tests
      run: cargo test --verbose

    # Create a GitHub release with the built binaries.
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/client
          target/release/server
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
